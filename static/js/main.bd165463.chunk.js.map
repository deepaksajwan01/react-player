{"version":3,"sources":["components/PlayersControl.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","mainContainer","border","padding","controlWrapper","position","top","bottom","right","left","background","display","flexDirection","justifyContent","zIndex","controlIcons","color","fontSize","buttonIcons","volumeSlider","width","ValueLabelComponent","props","children","open","value","Tooltip","enterTouchDelay","placement","title","PrettoSlider","withStyles","root","height","thumb","backgroundColor","marginTop","marginLeft","boxShadow","active","valueLabel","track","borderRadius","rail","Slider","forwardRef","ref","onPlayPause","playing","onRewind","onForward","onMute","muted","onVolumeChange","onVolumeSeekUp","volume","playbackRate","onPlaybackRateChange","onToggaleFullScreen","played","onSeek","onSeekMouseDown","onSeekMouseUp","elapsedTime","totalDuration","onChangeDisplayFormat","onBookMarkChangeNext","onBookMarkChangePrevious","marks","classes","React","useState","anchorEl","setAnchorEl","Boolean","id","undefined","className","Grid","container","direction","alighItems","justify","style","item","alignItems","IconButton","aria-label","Replay10","onClick","Pause","PlayArrow","Forward10","xs","min","max","step","onChange","onMouseDown","onChangeCommitted","VolumeOff","VolumeUp","defaultValue","Button","variant","Typography","SkipPrevious","Bookmark","SkipNext","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","map","rate","Fullscreen","playerWrapper","format","seconds","isNaN","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","toString","padStart","count","App","seeking","currentMark","state","setState","timeDisplayFormat","setTimeDisplayFormat","playerRef","useRef","playerContainerRef","controlRef","currentTime","current","getCurrentTime","duration","getDuration","bookmarks","bookmark","Toolbar","Container","maxWidth","onMouseMove","visibility","url","onProgress","changeState","includes","playedSeconds","console","log","seekTo","e","newValue","parseFloat","screenfull","toggle","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd165463.chunk.js","sourcesContent":["import React, { forwardRef } from \"react\"\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\"\nimport {\n  Button,\n  IconButton,\n  Slider,\n  Tooltip,\n  Typography,\n  Grid,\n  Popover,\n} from \"@material-ui/core\"\nimport {\n  FastRewind,\n  FastForward,\n  PlayArrow,\n  Pause,\n  VolumeUp,\n  Fullscreen,\n  Bookmark,\n  VolumeOff,\n  Forward10,\n  Replay10,\n  SkipNext,\n  SkipPrevious,\n} from \"@material-ui/icons\"\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    border: \"1px solid black\",\n    padding: \"10px\",\n  },\n  controlWrapper: {\n    position: \"absolute\",\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    background: \"rgba(0,0,0,0.6)\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    zIndex: 1,\n  },\n  controlIcons: {\n    color: \"#777\",\n    fontSize: 50,\n    // transform: \"scale(0.9)\",\n    \"&:hover\": {\n      color: \"#fff\",\n      // transform: \"scale(1)\",\n    },\n  },\n  buttonIcons: {\n    color: \"#fff\",\n    \"&:hover\": {\n      color: \"#fff\",\n    },\n  },\n  volumeSlider: {\n    width: 100,\n    color: \"#fff\",\n  },\n})\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props\n  return (\n    <Tooltip open={open} enterTouchDelay={0} placement='top' title={value}>\n      {children}\n    </Tooltip>\n  )\n}\n\nconst PrettoSlider = withStyles({\n  root: {\n    height: 0,\n  },\n  thumb: {\n    // height: 12,\n    // width: 12,\n    backgroundColor: \"#fff\",\n    // border: \"2px solid currentColor\",\n    marginTop: -4,\n    marginLeft: -12,\n    \"&:focus, &:hover, &$active\": {\n      boxShadow: \"inherit\",\n    },\n  },\n  active: {\n    color: \"#fff\",\n  },\n  valueLabel: {\n    left: \"calc(-50% + 4px)\",\n  },\n  track: {\n    height: 4,\n    borderRadius: 4,\n    color: \"#fff\",\n  },\n  rail: {\n    height: 4,\n    borderRadius: 4,\n    background: \"#fff\",\n  },\n})(Slider)\n\nexport default forwardRef(function PlayersControl(\n  {\n    onPlayPause,\n    playing,\n    onRewind,\n    onForward,\n    onMute,\n    muted,\n    onVolumeChange,\n    onVolumeSeekUp,\n    volume,\n    playbackRate,\n    onPlaybackRateChange,\n    onToggaleFullScreen,\n    played,\n    onSeek,\n    onSeekMouseDown,\n    onSeekMouseUp,\n    elapsedTime,\n    totalDuration,\n    onChangeDisplayFormat,\n    onBookMarkChangeNext,\n    onBookMarkChangePrevious,\n    marks,\n  },\n  ref\n) {\n  const classes = useStyles()\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handlePopover = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  // console.log(marks)\n  const open = Boolean(anchorEl)\n  const id = open ? \"playbackrate-popover\" : undefined\n  // console.log(\"updated value of played is: \", played * 100)\n  // console.log(typeof totalDuration)\n  // const val = parseInt(totalDuration)\n  // console.log(typeof val, val * 60)\n  // console.log(\"currennt val\", played * 100)\n\n  return (\n    <div className={classes.controlWrapper} ref={ref}>\n      {/* Top controls */}\n      <Grid\n        container\n        direction='row'\n        alighItems='center'\n        justify='space-between'\n        style={{ padding: 16 }}\n      >\n        <Grid item>\n          {/* <Typography variant='p' style={{ color: \"#fff\" }}>\n            Video Title\n          </Typography> */}\n        </Grid>\n        {/* <Grid item>\n          <Button variant='contained' color='primary' startIcon={<Bookmark />}>\n            Bookmark\n          </Button>\n        </Grid> */}\n      </Grid>\n      {/* miidle controls */}\n      <Grid container direction='row' alignItems='center' justify='center'>\n        <IconButton className={classes.controlIcons} aria-label='requied'>\n          <Replay10\n            fontSize='large'\n            style={{ color: \"#fff\" }}\n            onClick={onRewind}\n          />\n        </IconButton>\n        <IconButton\n          style={{ color: \"#fff\" }}\n          onClick={onPlayPause}\n          className={classes.controlIcons}\n          aria-label='requied'\n        >\n          {playing ? (\n            <Pause fontSize='large' />\n          ) : (\n            <PlayArrow fontSize='large' />\n          )}\n        </IconButton>\n        <IconButton className={classes.controlIcons} aria-label='requied'>\n          <Forward10\n            fontSize='large'\n            style={{ color: \"#fff\" }}\n            onClick={onForward}\n          />\n        </IconButton>\n      </Grid>\n\n      {/* Bottom controls */}\n      <Grid\n        container\n        direction='row'\n        justify='space-between'\n        alignItems='center'\n        style={{ padding: 16 }}\n      >\n        <Grid item xs='12'>\n          <PrettoSlider\n            min={0}\n            max={100}\n            step={1}\n            value={played * 100}\n            ValueLabelComponent={(props) => (\n              <ValueLabelComponent {...props} value={elapsedTime} />\n            )}\n            marks={marks}\n            onChange={onSeek}\n            onMouseDown={onSeekMouseDown}\n            onChangeCommitted={onSeekMouseUp}\n          />\n        </Grid>\n\n        <Grid item>\n          <Grid container alignItems='center' direction='row'>\n            <IconButton\n              onClick={onPlayPause}\n              className={classes.buttonIcons}\n              aria-label='requied'\n            >\n              {playing ? (\n                <Pause fontSize='large' />\n              ) : (\n                <PlayArrow fontSize='large' />\n              )}\n            </IconButton>\n\n            <IconButton\n              onClick={onMute}\n              className={classes.buttonIcons}\n              aria-label='requied'\n            >\n              {muted ? (\n                <VolumeOff fontSize='large' />\n              ) : (\n                <VolumeUp fontSize='large' />\n              )}\n            </IconButton>\n            <Slider\n              className={classes.volumeSlider}\n              min={0}\n              max={100}\n              value={volume * 100}\n              defaultValue={50}\n              onChange={onVolumeChange}\n              onChangeCommitted={onVolumeSeekUp}\n            />\n\n            <Button\n              onClick={onChangeDisplayFormat}\n              variant='text'\n              style={{ color: \"#fff\" }}\n            >\n              <Typography>\n                {elapsedTime}/{totalDuration}\n              </Typography>\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid item>\n          <IconButton\n            style={{ color: \"#fff\" }}\n            className={classes.controlIcons}\n            aria-label='requied'\n          >\n            <SkipPrevious\n              onClick={onBookMarkChangePrevious}\n              fontSize='large'\n              style={{ color: \"#fff\" }}\n            />\n          </IconButton>\n          <IconButton\n            style={{ color: \"#fff\" }}\n            className={classes.controlIcons}\n            aria-label='requied'\n          >\n            <Bookmark fontSize='large' />\n          </IconButton>\n          <IconButton className={classes.controlIcons} aria-label='requied'>\n            <SkipNext\n              onClick={onBookMarkChangeNext}\n              fontSize='large'\n              style={{ color: \"#fff\" }}\n            />\n          </IconButton>\n        </Grid>\n        <Grid item>\n          <Button\n            onClick={handlePopover}\n            variant='text'\n            style={{ color: \"#fff\" }}\n          >\n            <Typography>{playbackRate}X</Typography>\n          </Button>\n          <Popover\n            id={id}\n            open={open}\n            anchorEl={anchorEl}\n            onClose={handleClose}\n            anchorOrigin={{\n              vertical: \"top\",\n              horizontal: \"center\",\n            }}\n            transformOrigin={{\n              vertical: \"bottom\",\n              horizontal: \"center\",\n            }}\n          >\n            <Grid container direction='column-reverse'>\n              {[0.5, 1, 1.5, 2].map((rate) => (\n                <Button\n                  key={rate}\n                  onClick={() => onPlaybackRateChange(rate)}\n                  variant='text'\n                >\n                  <Typography\n                    color={rate === playbackRate ? \"secondary\" : \"default\"}\n                  >\n                    {rate}\n                  </Typography>\n                </Button>\n              ))}\n            </Grid>\n          </Popover>\n          <IconButton\n            onClick={onToggaleFullScreen}\n            className={classes.buttonIcons}\n            aria-label='requied'\n          >\n            <Fullscreen fontSize='large' />\n          </IconButton>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n","import React, { useState, useRef } from \"react\"\nimport ReactPlayer from \"react-player\"\nimport screenfull from \"screenfull\"\nimport { Toolbar, Container } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PlayersControl from \"./components/PlayersControl\"\nimport \"./App.css\"\n\nconst useStyles = makeStyles({\n  mainContainer: {\n    // border: \"1px solid black\",\n    // padding: \"10px\",\n  },\n  playerWrapper: {\n    width: \"100%\",\n    position: \"relative\",\n  },\n})\n\nconst format = (seconds) => {\n  if (isNaN(seconds)) return \"00:00\"\n  const date = new Date(seconds * 1000)\n  const hh = date.getUTCHours()\n  const mm = date.getUTCMinutes()\n  const ss = date.getUTCSeconds()\n\n  if (hh) return `${hh}:${mm.toString().padStart(2, \"0\")}:${ss}`\n  return `${mm}:${ss}`\n}\nlet count = 0\nfunction App() {\n  const [state, setState] = useState({\n    playing: true,\n    muted: true,\n    volume: 0.5,\n    playbackRate: 1.0,\n    played: 0,\n    seeking: false,\n    currentMark: 0,\n  })\n  const [timeDisplayFormat, setTimeDisplayFormat] = useState(\"normal\")\n  const classes = useStyles()\n  const { playing, muted, volume, playbackRate, played, currentMark } = state\n\n  const handlePlayPause = () => {\n    setState({ ...state, playing: !state.playing })\n  }\n  const handleRewind = () => {\n    playerRef.current.seekTo(playerRef.current.getCurrentTime() - 10)\n  }\n\n  const handleForward = () => {\n    playerRef.current.seekTo(playerRef.current.getCurrentTime() + 10)\n  }\n\n  const handleMute = () => {\n    setState({ ...state, muted: !state.muted })\n  }\n\n  const handleVolumeChange = (e, newValue) => {\n    setState({\n      ...state,\n      volume: parseFloat(newValue / 100),\n      muted: newValue === 0 ? true : false,\n    })\n  }\n  const handleVolumeSeekUp = (e, newValue) => {\n    setState({\n      ...state,\n      volume: parseFloat(newValue / 100),\n      muted: newValue === 0 ? true : false,\n    })\n  }\n  const handlePlaybackRateChange = (rate) => {\n    setState({\n      ...state,\n      playbackRate: rate,\n    })\n  }\n  const toggaleFullScreen = () => {\n    screenfull.toggle(playerContainerRef.current)\n  }\n  const handleProgress = (changeState) => {\n    if (count > 3) {\n      controlRef.current.style.visibility = \"hidden\"\n      count = 0\n    }\n    if (controlRef.current.style.visibility == \"visible\") {\n      count += 1\n    }\n    // console.log(count)\n    // console.log(\"changeState: \", changeState)\n\n    /* check for if we the current state has the bookmark time  */\n    /* update the current bookmark */\n    if (bookmarks.includes(changeState.playedSeconds / 60)) {\n      console.log(\"we passed the bookmark\")\n    }\n\n    setState({\n      ...state,\n      ...changeState,\n    })\n  }\n\n  const handleSeekChange = (e, newValue) => {\n    // console.log(\"handleSeekChange\", newValue)\n    // console.log(playerRef.current.played)\n    if (!state.seeking) {\n      setState({\n        ...state,\n        played: parseFloat(newValue / 100),\n      })\n    }\n  }\n  const handleOnSeekMouseDown = (e) => {\n    // console.log(\"handleOnSeekMouseDown\")\n    setState({\n      ...state,\n      seeking: true,\n    })\n  }\n  const handleOSeekMouseUp = (e, newValue) => {\n    // console.log(\"total time is : \", playerRef.current.getDuration())\n    console.log(\"handleOSeekMouseUp\", newValue)\n    setState({\n      ...state,\n      seeking: false,\n    })\n    playerRef.current.seekTo(newValue / 100)\n  }\n\n  const handleChangeDisplayFormat = () => {\n    setTimeDisplayFormat(timeDisplayFormat === \"normal\" ? \"remaning\" : \"normal\")\n  }\n  const playerRef = useRef(null)\n  const playerContainerRef = useRef(null)\n  const controlRef = useRef(null)\n\n  const currentTime = playerRef.current\n    ? playerRef.current.getCurrentTime()\n    : \"00:00\"\n  const duration = playerRef.current ? playerRef.current.getDuration() : \"00:00\"\n\n  const elapsedTime =\n    timeDisplayFormat === \"normal\"\n      ? format(currentTime)\n      : `-${format(duration - currentTime)}\n  `\n  const totalDuration = format(duration)\n\n  const handleMouseMove = () => {\n    controlRef.current.style.visibility = \"visible\"\n    count = 0\n  }\n  const bookmarks = [2, 4, 5.5, 7, 10]\n  const createMarkers = () => {\n    // const totalDuration = 14\n    const marks = bookmarks.map((bookmark) => {\n      const val = (bookmark / 14) * 100\n      return { value: val }\n    })\n    return marks\n  }\n  const marks = createMarkers()\n  // console.log(marks)\n  //handle bookmarks\n\n  const handleBookMarkChangeNext = () => {\n    if (currentMark === bookmarks.length - 1) return\n    playerRef.current.seekTo(bookmarks[currentMark + 1] * 60)\n    setState({\n      ...state,\n      currentMark: state.currentMark + 1,\n    })\n    console.log(\"currentMark\", currentMark)\n  }\n\n  const handleBookMarkChangePrevious = () => {\n    if (currentMark === 0) return\n    playerRef.current.seekTo(bookmarks[currentMark - 1] * 60)\n    setState({\n      ...state,\n      currentMark: state.currentMark - 1,\n    })\n    console.log(\"currentMark\", currentMark)\n  }\n\n  return (\n    <>\n      <Toolbar />\n      <Container maxWidth='md' className={classes.mainContainer}>\n        <div\n          ref={playerContainerRef}\n          className={classes.playerWrapper}\n          onMouseMove={handleMouseMove}\n        >\n          <ReactPlayer\n            ref={playerRef}\n            width={\"100%\"}\n            height='100%'\n            url='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/Sintel.mp4'\n            // url='http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4'\n\n            playing={playing}\n            muted={muted}\n            volume={volume}\n            playbackRate={playbackRate}\n            onProgress={handleProgress}\n          />\n          <PlayersControl\n            ref={controlRef}\n            onPlayPause={handlePlayPause}\n            playing={playing}\n            onRewind={handleRewind}\n            onForward={handleForward}\n            onMute={handleMute}\n            muted={muted}\n            onVolumeChange={handleVolumeChange}\n            onVolumeSeekUp={handleVolumeSeekUp}\n            volume={volume}\n            playbackRate={playbackRate}\n            onPlaybackRateChange={handlePlaybackRateChange}\n            onToggaleFullScreen={toggaleFullScreen}\n            played={played}\n            onSeek={handleSeekChange}\n            onSeekMouseDown={handleOnSeekMouseDown}\n            onSeekMouseUp={handleOSeekMouseUp}\n            elapsedTime={elapsedTime}\n            totalDuration={totalDuration}\n            onChangeDisplayFormat={handleChangeDisplayFormat}\n            onBookMarkChangeNext={handleBookMarkChangeNext}\n            onBookMarkChangePrevious={handleBookMarkChangePrevious}\n            marks={marks}\n          />\n        </div>\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}